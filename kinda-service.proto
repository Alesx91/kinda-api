syntax = "proto3";
package KindaGRPC;
import "kinda-ongoing.proto";
import "kinda-outgoing.proto";

service Kinda {
    //auth
    rpc auth (AuthRequestPB) returns (AuthResponsePB);
    rpc registration (RegistrationRequestPB) returns (EmptyResponsePB);
    rpc verification (VerificationRequestPB) returns (EmptyResponsePB);
    rpc acknowledgeRejection (AuthRequestPB) returns (EmptyResponsePB);

    //search
    rpc searchActivityNotification (EmptyRequestPB) returns (EmptyResponsePB);
    rpc deleteBlindChat (BlindChatIdPB) returns (EmptyResponsePB);
    rpc blockBlindChat (BlindChatIdPB) returns (EmptyResponsePB);
    rpc setGeoLocation (LocationPB) returns (EmptyResponsePB);
    rpc setSearchParameters (SearchParamsPB) returns (EmptyResponsePB);
    rpc getGeoDistance (UidPB) returns (GeoDistancePB);

    //blindChat
    rpc sendBlindChatMessage (BlindChatMessagePB) returns (EmptyResponsePB);
    rpc sendBlindChatTyping (stream BlindChatIdPB) returns (EmptyResponsePB);
    rpc sendChoice (ChoicePB) returns (EmptyResponsePB);

    //chat
    rpc sendChatMessage (ChatMessagePB) returns (EmptyResponsePB);
    rpc deleteChat (ChatIdPB) returns (EmptyResponsePB);
    rpc blockChat (ChatIdPB) returns (EmptyResponsePB);
    rpc report (UidPB) returns (EmptyResponsePB);

    //profile
    rpc getPhotoLink (PhotoLinkPB) returns (StringResponsePB);
    rpc setDescription (DescriptionPB) returns (EmptyResponsePB);
    rpc setAvatar (AvatarPB) returns (EmptyResponsePB);
    rpc deletePhoto (PhotoIdPB) returns (EmptyResponsePB);
    rpc addPhoto (PhotoIdPB) returns (EmptyResponsePB);
    rpc setPhotosOrder (PhotosOrderPB) returns (EmptyResponsePB);
    rpc setDoNotDisturb (DoNotDisturbPB) returns (EmptyResponsePB);
    rpc deleteProfile (EmptyRequestPB) returns (EmptyResponsePB);
    rpc setNotificationToken (RegistrationTokenPB) returns (EmptyResponsePB);
    rpc logout (EmptyRequestPB) returns (EmptyResponsePB);

    //versioning
    rpc getVersion (EmptyRequestPB) returns (VersionPB);

    //extra
    rpc log (UidPB) returns (EmptyResponsePB);
    rpc getRemoteConfigData (EmptyRequestPB) returns (RemoteConfigDataPB);
}